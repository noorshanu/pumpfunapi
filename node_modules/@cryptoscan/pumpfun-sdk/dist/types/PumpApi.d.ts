import { TransferParams } from './types/TransferParams.js';
import { BuyParams } from "./types/BuyParams.js";
import { PumpApiParams } from "./types/PumpApiParams.js";
import { SellParams } from "./types/SellParams.js";
import { PumpCoin } from "./types/index.js";
export declare class PumpApi {
    protected readonly params: PumpApiParams;
    constructor(params?: Partial<PumpApiParams>);
    buy(_params: BuyParams): Promise<string>;
    sell(_params: SellParams): Promise<string>;
    transfer(_params: TransferParams): Promise<string>;
    listenTransactions(address: string, onTransaction: (transaction: Record<string, unknown>) => void): Promise<void>;
    listenCoinBump(coinAddress: string, onBump: (coin: PumpCoin) => void): () => void;
    waitMint(coinAddress: string): Promise<PumpCoin>;
    onMint(callback: (data: PumpCoin) => void): () => void;
    onBump(callback: (data: PumpCoin) => void): () => void;
    private listenPumpFun;
}
