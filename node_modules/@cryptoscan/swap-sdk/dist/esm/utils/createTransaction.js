import { VersionedTransaction } from "@solana/web3.js";
import { ENDPOINT } from "./constants.js";
import { loadTransaction } from "./loadTransaction.js";
function filterAndConvert(obj) {
    const result = {};
    for (const key in obj) {
        if (typeof obj[key] === 'string' || typeof obj[key] === 'number') {
            result[key] = obj[key].toString();
        }
    }
    return result;
}
export const createTransaction = async (params) => {
    const searchParams = new URLSearchParams(filterAndConvert(params));
    console.log(searchParams.toString());
    const response = await fetch(`${ENDPOINT}/createTransaction?${searchParams.toString()}`);
    if (!response.ok) {
        console.log(response);
        throw new Error(`Failed to create transaction: ${response.statusText}`);
    }
    const data = await response.json();
    if (!('txn' in data)) {
        throw new Error('Failed to create transaction: no txn found in response');
    }
    const txn = data.txn;
    const transaction = VersionedTransaction.deserialize(Buffer.from(txn, "base64"));
    const instructions = transaction.message
        .instructions;
    return loadTransaction({ txn: data.txn, ...params });
};
