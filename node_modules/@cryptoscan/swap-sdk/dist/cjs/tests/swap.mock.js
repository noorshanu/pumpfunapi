"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const vitest_1 = require("vitest");
const web3_js_1 = require("@solana/web3.js");
const bs58_1 = __importDefault(require("bs58"));
const solana_send_transaction_1 = __importDefault(require("@cryptoscan/solana-send-transaction"));
const createTransaction_js_1 = require("../utils/createTransaction.js");
(0, vitest_1.describe)('swap', () => {
    (0, vitest_1.test)('should send transaction with private rpc', async () => {
        const connection = new web3_js_1.Connection(process.env.CONNECTION_URL, {
            wsEndpoint: process.env.WS_CONNECTION_URL,
        });
        const secretKey = bs58_1.default.decode(process.env.TEST_SECRET_KEY);
        const wallet = web3_js_1.Keypair.fromSecretKey(secretKey);
        const transaction = await (0, createTransaction_js_1.createTransaction)({
            network: "solana",
            from: "So11111111111111111111111111111111111111112",
            to: "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v",
            amount: 0.002,
            walletAddress: wallet.publicKey.toString(),
        });
        transaction.sign([wallet]);
        const txid = await (0, solana_send_transaction_1.default)(transaction, {
            connection,
            checkBlockHeight: false,
            speed: 'fast',
        });
        console.log('sent', txid);
        (0, vitest_1.expect)(txid).toBeDefined();
        (0, vitest_1.expect)(typeof txid).toBe('string');
    }, 60_000);
});
